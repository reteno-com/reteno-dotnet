#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef RETENOSDK_SWIFT_H
#define RETENOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
@import UserNotificationsUI;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RetenoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC9RetenoSDK7Address")
@interface Address : NSObject
- (nonnull instancetype)initWithRegion:(NSString * _Nullable)region town:(NSString * _Nullable)town address:(NSString * _Nullable)address postcode:(NSString * _Nullable)postcode OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UserCustomField;

SWIFT_CLASS("_TtC9RetenoSDK23AnonymousUserAttributes")
@interface AnonymousUserAttributes : NSObject
- (nonnull instancetype)initWithFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName languageCode:(NSString * _Nullable)languageCode timeZone:(NSString * _Nullable)timeZone address:(Address * _Nullable)address fields:(NSArray<UserCustomField *> * _Nonnull)fields OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK8AppInbox")
@interface AppInbox : NSObject
/// Subscribe on unread messages count changes
/// set <code>Value</code> when you want to start receiving messages count
/// set <code>nil</code> when you want to stop receiving messages count
@property (nonatomic, copy) void (^ _Nullable onUnreadMessagesCountChanged)(NSInteger);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MessagesResult;

@interface AppInbox (SWIFT_EXTENSION(RetenoSDK))
/// Download inbox messages
/// \param page order number of requested page.  If <code>nil</code> will be rurned all messages.
///
/// \param perPage messages count per page. If <code>nil</code> will be rurned all messages.
///
/// \param success completion handler <code>(MessagesResult) -> Void</code>,
///
/// \param failure completion handler <code>(Error) -> Void</code>
///
- (void)downloadMessagesWithPage:(NSInteger)page pageSize:(NSInteger)pageSize success:(void (^ _Nonnull)(MessagesResult * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Get unread count of App inbox messages
/// \param success completion handler <code>(Int) -> Void</code>,
///
/// \param failure completion handler <code>(Error) -> Void</code>
///
- (void)getUnreadMessagesCountWithSuccess:(void (^ _Nonnull)(NSInteger))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Change inbox messages status on <code>OPENED</code>
/// \param messageIds Array of message identificators, which statuses should be changes
///
/// \param success completion handler <code>() -> Void</code>,
///
/// \param failure completion handler <code>(Error) -> Void</code>
///
- (void)markAsOpenedWithMessageIds:(NSArray<NSString *> * _Nonnull)messageIds success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Change all inbox messages status on <code>OPENED</code>
- (void)markAllAsOpenedWithSuccess:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

@class NSURL;
@class NSDate;

SWIFT_CLASS("_TtC9RetenoSDK15AppInboxMessage")
@interface AppInboxMessage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nullable content;
@property (nonatomic, readonly, copy) NSURL * _Nullable imageURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable linkURL;
@property (nonatomic, readonly) BOOL isNew;
@property (nonatomic, readonly, copy) NSString * _Nullable category;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable customData;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiryDate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK8BoolObjc")
@interface BoolObjc : NSObject
- (nonnull instancetype)initWithBool:(BOOL)bool_ OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC9RetenoSDK9Ecommerce")
@interface Ecommerce : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EventObjcType;

@interface Ecommerce (SWIFT_EXTENSION(RetenoSDK))
- (void)logEventWithType:(EventObjcType * _Nonnull)type date:(NSDate * _Nonnull)date forcePush:(BOOL)forcePush;
@end


SWIFT_CLASS("_TtC9RetenoSDK14EcommerceOrder")
@interface EcommerceOrder : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EcommerceOrderStatus : NSInteger;
@class NSNumber;
@class EcommerceOrderItem;

@interface EcommerceOrder (SWIFT_EXTENSION(RetenoSDK))
- (nonnull instancetype)initWithExternalOrderId:(NSString * _Nonnull)externalOrderId totalCost:(float)totalCost status:(enum EcommerceOrderStatus)status date:(NSDate * _Nonnull)date cartId:(NSString * _Nullable)cartId email:(NSString * _Nullable)email phone:(NSString * _Nullable)phone firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName shipping:(NSNumber * _Nullable)shipping discount:(NSNumber * _Nullable)discount taxes:(NSNumber * _Nullable)taxes restoreUrl:(NSString * _Nullable)restoreUrl statusDescription:(NSString * _Nullable)statusDescription storeId:(NSString * _Nullable)storeId source:(NSString * _Nullable)source deliveryMethod:(NSString * _Nullable)deliveryMethod paymentMethod:(NSString * _Nullable)paymentMethod deliveryAddress:(NSString * _Nullable)deliveryAddress items:(NSArray<EcommerceOrderItem *> * _Nullable)items attributes:(NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nullable)attributes;
@end


SWIFT_CLASS("_TtC9RetenoSDK18EcommerceOrderItem")
@interface EcommerceOrderItem : NSObject
- (nonnull instancetype)initWithExternalItemId:(NSString * _Nonnull)externalItemId name:(NSString * _Nonnull)name category:(NSString * _Nonnull)category quantity:(double)quantity cost:(float)cost url:(NSString * _Nonnull)url imageUrl:(NSString * _Nullable)imageUrl description:(NSString * _Nullable)description OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, EcommerceOrderStatus, open) {
  EcommerceOrderStatusINITIALIZED = 0,
  EcommerceOrderStatusIN_PROGRESS = 1,
  EcommerceOrderStatusDELIVERED = 2,
  EcommerceOrderStatusCANCELLED = 3,
};


SWIFT_CLASS("_TtC9RetenoSDK16EcommerceProduct")
@interface EcommerceProduct : NSObject
- (nonnull instancetype)initWithProductId:(NSString * _Nonnull)productId price:(float)price isInStock:(BOOL)isInStock attributes:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nullable)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK24EcommerceProductCategory")
@interface EcommerceProductCategory : NSObject
- (nonnull instancetype)initWithProductCategoryId:(NSString * _Nonnull)productCategoryId attributes:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nullable)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK22EcommerceProductInCart")
@interface EcommerceProductInCart : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface EcommerceProductInCart (SWIFT_EXTENSION(RetenoSDK))
- (nonnull instancetype)initWithProductId:(NSString * _Nonnull)productId price:(float)price quantity:(NSInteger)quantity discount:(NSNumber * _Nullable)discount name:(NSString * _Nullable)name category:(NSString * _Nullable)category attributes:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nullable)attributes;
@end


SWIFT_CLASS("_TtC9RetenoSDK5Event")
@interface Event : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9RetenoSDK13EventObjcType")
@interface EventObjcType : NSObject
+ (EventObjcType * _Nonnull)productViewedWithProduct:(EcommerceProduct * _Nonnull)product currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)productCategoryViewedWithCategory:(EcommerceProductCategory * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)productAddedToWishlistWithProduct:(EcommerceProduct * _Nonnull)product currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)cartUpdatedWithCartId:(NSString * _Nonnull)cartId products:(NSArray<EcommerceProductInCart *> * _Nonnull)products currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderCreatedWithOrder:(EcommerceOrder * _Nonnull)order currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderUpdatedWithOrder:(EcommerceOrder * _Nonnull)order currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderDeliveredWithExternalOrderId:(NSString * _Nonnull)externalOrderId SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderCancelledWithExternalOrderId:(NSString * _Nonnull)externalOrderId SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)searchRequestWithQuery:(NSString * _Nonnull)query isFound:(BoolObjc * _Nullable)isFound SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK14EventParameter")
@interface EventParameter : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK18InAppMessageAction")
@interface InAppMessageAction : NSObject
@property (nonatomic, readonly) BOOL isCloseButtonClicked;
@property (nonatomic, readonly) BOOL isButtonClicked;
@property (nonatomic, readonly) BOOL isOpenUrlClicked;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, InAppMessageStatusEnum, open) {
  InAppMessageStatusEnumInAppShouldBeDisplayed = 0,
  InAppMessageStatusEnumInAppIsDisplayed = 1,
  InAppMessageStatusEnumInAppShouldBeClosed = 2,
  InAppMessageStatusEnumInAppIsClosed = 3,
  InAppMessageStatusEnumInAppReceivedError = 4,
};


SWIFT_CLASS("_TtC9RetenoSDK22InAppMessageStatusObjc")
@interface InAppMessageStatusObjc : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, InteractionStatus, open) {
  InteractionStatusDelivered = 0,
  InteractionStatusOpened = 1,
  InteractionStatusClicked = 2,
  InteractionStatusUnknown = 3,
};


SWIFT_CLASS("_TtC9RetenoSDK19JSONConverterHelper")
@interface JSONConverterHelper : NSObject
+ (NSString * _Nullable)convertJSONToString:(id _Nonnull)json SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LinkSource : NSInteger;

SWIFT_CLASS("_TtC9RetenoSDK11LinkHandler")
@interface LinkHandler : NSObject
@property (nonatomic, readonly, copy) NSURL * _Nullable url;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable customData;
@property (nonatomic, readonly) enum LinkSource source;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LinkSource, open) {
  LinkSourcePushNotification = 0,
  LinkSourceInAppMessage = 1,
};






typedef SWIFT_ENUM(NSInteger, PauseBehaviour, open) {
/// Skipped all InAppMessages until pause enabled.
  PauseBehaviourSkipInApps = 0,
/// Skipped all InAppMessages until pause is enabled and show the first one (if it existed) when pause is disabled.
  PauseBehaviourPostponeInApps = 1,
};


SWIFT_CLASS("_TtC9RetenoSDK10RecomEvent")
@interface RecomEvent : NSObject
- (nonnull instancetype)initWithDate:(NSDate * _Nonnull)date productId:(NSString * _Nonnull)productId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK11RecomFilter")
@interface RecomFilter : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name values:(NSArray<NSString *> * _Nonnull)values OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK15Recommendations")
@interface Recommendations : NSObject
/// Log recommendation event
/// \param recomVariantId recommendation identificator
///
/// \param impressions events describing that a specific product recommendation was shown to a user
///
/// \param clicks events describing that a user clicked a specific product recommendation
///
/// \param forcePush indicates if event should be send immediately or in the next scheduled batch.
///
- (void)logEventWithRecomVariantId:(NSString * _Nonnull)recomVariantId impressions:(NSArray<RecomEvent *> * _Nonnull)impressions clicks:(NSArray<RecomEvent *> * _Nonnull)clicks forcePush:(BOOL)forcePush;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface Recommendations (SWIFT_EXTENSION(RetenoSDK))
/// Get product recommendations
/// \param recomVariantId recommendations variant identificator
///
/// \param productIds product IDs for product-based algorithms
///
/// \param categoryId product category ID for category-based algorithms
///
/// \param filters additional algorithm filters array
///
/// \param fields response model fields keys
///
/// \param success closure response dictionary `[String:  Any]
///
/// \param failure closure return error
///
- (void)getRecomsWithRecomVariantId:(NSString * _Nonnull)recomVariantId productIds:(NSArray<NSString *> * _Nonnull)productIds categoryId:(NSString * _Nullable)categoryId filters:(NSArray<RecomFilter *> * _Nullable)filters fields:(NSArray<NSString *> * _Nullable)fields success:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

@class UserNotificationService;
@class RetenoConfiguration;
@class UserAttributes;

SWIFT_CLASS("_TtC9RetenoSDK6Reteno")
@interface Reteno : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UserNotificationService * _Nonnull userNotificationService SWIFT_AVAILABILITY(ios_app_extension,unavailable);)
+ (UserNotificationService * _Nonnull)userNotificationService SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// SDK initialization
/// \param apiKey API key is used for authentication. You can create a key for a mobile application in the <code>Settings → Mobile Push</code> section in the <code>Reteno</code> cabinet.
///
/// \param configs Flag that indicates if automatic screen view tracking enabled
///
+ (void)startWithApiKey:(NSString * _Nonnull)apiKey configuration:(RetenoConfiguration * _Nonnull)configuration SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// SDK delayed initialization
+ (void)delayedStart SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// SDK delayed  initialization (can be called only after Reteno.delayedStart(configuration:))
/// \param apiKey API key is used for authentication. You can create a key for a mobile application in the <code>Settings → Mobile Push</code> section in the <code>Reteno</code> cabinet.
///
+ (void)delayedSetupWithApiKey:(NSString * _Nonnull)apiKey configuration:(RetenoConfiguration * _Nonnull)configuration SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// SDK initialization
/// \param apiKey API key is used for authentication. You can create a key for a mobile application in the <code>Settings → Mobile Push</code> section in the <code>Reteno</code> cabinet.
///
/// \param isAutomaticScreenReportingEnabled Flag that indicates if automatic screen view tracking enabled
///
/// \param isDebugMode Flag that indicates if <code>DebugMode</code> is enabled
///
/// \param isPausedInAppMessages Flag that indicates pause in InAppMessage presenting
///
+ (void)startWithApiKey:(NSString * _Nonnull)apiKey isAutomaticScreenReportingEnabled:(BOOL)isAutomaticScreenReportingEnabled isDebugMode:(BOOL)isDebugMode isPausedInAppMessages:(BOOL)isPausedInAppMessages inAppMessagesPauseBehaviour:(enum PauseBehaviour)inAppMessagesPauseBehaviour SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// Log events
/// \param eventTypeKey Event type ID
///
/// \param date Time when event occurred
///
/// \param parameters List of event parameters as array of “key” - “value” pairs. Parameter keys are arbitrary. Used in campaigns and for dynamic content creation in messages.
///
/// \param forcePush indicates if event should be send immediately or in the next scheduled batch
///
+ (void)logEventWithEventTypeKey:(NSString * _Nonnull)eventTypeKey date:(NSDate * _Nonnull)date parameters:(NSArray<EventParameter *> * _Nonnull)parameters forcePush:(BOOL)forcePush;
+ (void)addLinkHandler:(void (^ _Nonnull)(LinkHandler * _Nonnull))handler;
+ (void)addInAppStatusHandler:(void (^ _Nonnull)(InAppMessageStatusObjc * _Nonnull))handler;
/// Update push notification status in <code>Reteno</code>
/// \param interactionId <code>InteractionId</code> from push payload
///
/// \param status Interaction status. Possible values <code>.delivered</code>, <code>.opened</code>, <code>.clicked</code>
///
/// \param date Time when event occurred
///
+ (void)updateNotificationInteractionStatusWithInteractionId:(NSString * _Nonnull)interactionId status:(enum InteractionStatus)status date:(NSDate * _Nonnull)date;
/// Update User attributes
/// \param externalUserId Id for identify user in a system (optional)
///
/// \param userAttributes user specific attributes in format <code>UserAttributes</code> (firstName, phone, email, etc.) (optional)
///
/// \param subscriptionKeys list of subscription categories keys, can be empty
///
/// \param groupNamesInclude list of group ID to add a contact to, can be empty
///
/// \param groupNamesExclude list of group ID to remove a contact from, can be empty
///
+ (void)updateUserAttributesWithExternalUserId:(NSString * _Nullable)externalUserId userAttributes:(UserAttributes * _Nullable)userAttributes subscriptionKeys:(NSArray<NSString *> * _Nonnull)subscriptionKeys groupNamesInclude:(NSArray<NSString *> * _Nonnull)groupNamesInclude groupNamesExclude:(NSArray<NSString *> * _Nonnull)groupNamesExclude;
/// Update Anonymous User attributes
/// \param userAttributes user specific attributes in format <code>AnonymousUserAttributes</code> (firstName, address, etc.)
///
/// \param subscriptionKeys list of subscription categories keys, can be empty
///
/// \param groupNamesInclude list of group ID to add a contact to, can be empty
///
/// \param groupNamesExclude list of group ID to remove a contact from, can be empty
///
+ (void)updateAnonymousUserAttributesWithUserAttributes:(AnonymousUserAttributes * _Nonnull)userAttributes subscriptionKeys:(NSArray<NSString *> * _Nonnull)subscriptionKeys groupNamesInclude:(NSArray<NSString *> * _Nonnull)groupNamesInclude groupNamesExclude:(NSArray<NSString *> * _Nonnull)groupNamesExclude;
/// Get instance of <code>AppInbox</code>
+ (AppInbox * _Nonnull)inbox SWIFT_WARN_UNUSED_RESULT;
/// Get instance of <code>Recommendations</code>
+ (Recommendations * _Nonnull)recommendations SWIFT_WARN_UNUSED_RESULT;
+ (Ecommerce * _Nonnull)ecommerce SWIFT_WARN_UNUSED_RESULT;
+ (void)pauseInAppMessagesWithIsPaused:(BOOL)isPaused SWIFT_AVAILABILITY(ios_app_extension,unavailable);
+ (void)setInAppMessagesPauseBehaviourWithPauseBehaviour:(enum PauseBehaviour)pauseBehaviour;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC9RetenoSDK40RetenoCarouselNotificationViewController")
@interface RetenoCarouselNotificationViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UNNotification;

@interface RetenoCarouselNotificationViewController (SWIFT_EXTENSION(RetenoSDK)) <UNNotificationContentExtension>
- (void)didReceiveNotification:(UNNotification * _Nonnull)notification;
@end

@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;

@interface RetenoCarouselNotificationViewController (SWIFT_EXTENSION(RetenoSDK)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9RetenoSDK19RetenoConfiguration")
@interface RetenoConfiguration : NSObject
- (nonnull instancetype)initWithIsAutomaticScreenReportingEnabled:(BOOL)isAutomaticScreenReportingEnabled isAutomaticAppLifecycleReportingEnabled:(BOOL)isAutomaticAppLifecycleReportingEnabled isAutomaticPushSubsriptionReportingEnabled:(BOOL)isAutomaticPushSubsriptionReportingEnabled isAutomaticSessionReportingEnabled:(BOOL)isAutomaticSessionReportingEnabled isPausedInAppMessages:(BOOL)isPausedInAppMessages inAppMessagesPauseBehaviour:(enum PauseBehaviour)inAppMessagesPauseBehaviour isDebugMode:(BOOL)isDebugMode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC9RetenoSDK34RetenoNotificationServiceExtension")
@interface RetenoNotificationServiceExtension : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end







SWIFT_CLASS("_TtC9RetenoSDK14UserAttributes")
@interface UserAttributes : NSObject
- (nonnull instancetype)initWithPhone:(NSString * _Nullable)phone email:(NSString * _Nullable)email firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName languageCode:(NSString * _Nullable)languageCode timeZone:(NSString * _Nullable)timeZone address:(Address * _Nullable)address fields:(NSArray<UserCustomField *> * _Nonnull)fields OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC9RetenoSDK15UserCustomField")
@interface UserCustomField : NSObject
- (nonnull instancetype)initWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK23UserNotificationService") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UserNotificationService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UNUserNotificationCenter;
@class UNNotificationResponse;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UserNotificationService (SWIFT_EXTENSION(RetenoSDK)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef RETENOSDK_SWIFT_H
#define RETENOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
@import UserNotificationsUI;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RetenoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC9RetenoSDK7Address")
@interface Address : NSObject
- (nonnull instancetype)initWithRegion:(NSString * _Nullable)region town:(NSString * _Nullable)town address:(NSString * _Nullable)address postcode:(NSString * _Nullable)postcode OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UserCustomField;

SWIFT_CLASS("_TtC9RetenoSDK23AnonymousUserAttributes")
@interface AnonymousUserAttributes : NSObject
- (nonnull instancetype)initWithFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName languageCode:(NSString * _Nullable)languageCode timeZone:(NSString * _Nullable)timeZone address:(Address * _Nullable)address fields:(NSArray<UserCustomField *> * _Nonnull)fields OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK8AppInbox")
@interface AppInbox : NSObject
/// Subscribe on unread messages count changes
/// set <code>Value</code> when you want to start receiving messages count
/// set <code>nil</code> when you want to stop receiving messages count
@property (nonatomic, copy) void (^ _Nullable onUnreadMessagesCountChanged)(NSInteger);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MessagesResult;

@interface AppInbox (SWIFT_EXTENSION(RetenoSDK))
/// Download inbox messages
/// \param page order number of requested page.  If <code>nil</code> will be rurned all messages.
///
/// \param perPage messages count per page. If <code>nil</code> will be rurned all messages.
///
/// \param success completion handler <code>(MessagesResult) -> Void</code>,
///
/// \param failure completion handler <code>(Error) -> Void</code>
///
- (void)downloadMessagesWithPage:(NSInteger)page pageSize:(NSInteger)pageSize success:(void (^ _Nonnull)(MessagesResult * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Get unread count of App inbox messages
/// \param success completion handler <code>(Int) -> Void</code>,
///
/// \param failure completion handler <code>(Error) -> Void</code>
///
- (void)getUnreadMessagesCountWithSuccess:(void (^ _Nonnull)(NSInteger))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Change inbox messages status on <code>OPENED</code>
/// \param messageIds Array of message identificators, which statuses should be changes
///
/// \param success completion handler <code>() -> Void</code>,
///
/// \param failure completion handler <code>(Error) -> Void</code>
///
- (void)markAsOpenedWithMessageIds:(NSArray<NSString *> * _Nonnull)messageIds success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
/// Change all inbox messages status on <code>OPENED</code>
- (void)markAllAsOpenedWithSuccess:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

@class NSURL;
@class NSDate;

SWIFT_CLASS("_TtC9RetenoSDK15AppInboxMessage")
@interface AppInboxMessage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nullable content;
@property (nonatomic, readonly, copy) NSURL * _Nullable imageURL;
@property (nonatomic, readonly, copy) NSURL * _Nullable linkURL;
@property (nonatomic, readonly) BOOL isNew;
@property (nonatomic, readonly, copy) NSString * _Nullable category;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable customData;
@property (nonatomic, readonly, copy) NSDate * _Nullable expiryDate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK8BoolObjc")
@interface BoolObjc : NSObject
- (nonnull instancetype)initWithBool:(BOOL)bool_ OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC9RetenoSDK9Ecommerce")
@interface Ecommerce : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EventObjcType;

@interface Ecommerce (SWIFT_EXTENSION(RetenoSDK))
- (void)logEventWithType:(EventObjcType * _Nonnull)type date:(NSDate * _Nonnull)date forcePush:(BOOL)forcePush;
@end


SWIFT_CLASS("_TtC9RetenoSDK14EcommerceOrder")
@interface EcommerceOrder : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EcommerceOrderStatus : NSInteger;
@class NSNumber;
@class EcommerceOrderItem;

@interface EcommerceOrder (SWIFT_EXTENSION(RetenoSDK))
- (nonnull instancetype)initWithExternalOrderId:(NSString * _Nonnull)externalOrderId totalCost:(float)totalCost status:(enum EcommerceOrderStatus)status date:(NSDate * _Nonnull)date cartId:(NSString * _Nullable)cartId email:(NSString * _Nullable)email phone:(NSString * _Nullable)phone firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName shipping:(NSNumber * _Nullable)shipping discount:(NSNumber * _Nullable)discount taxes:(NSNumber * _Nullable)taxes restoreUrl:(NSString * _Nullable)restoreUrl statusDescription:(NSString * _Nullable)statusDescription storeId:(NSString * _Nullable)storeId source:(NSString * _Nullable)source deliveryMethod:(NSString * _Nullable)deliveryMethod paymentMethod:(NSString * _Nullable)paymentMethod deliveryAddress:(NSString * _Nullable)deliveryAddress items:(NSArray<EcommerceOrderItem *> * _Nullable)items attributes:(NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nullable)attributes;
@end


SWIFT_CLASS("_TtC9RetenoSDK18EcommerceOrderItem")
@interface EcommerceOrderItem : NSObject
- (nonnull instancetype)initWithExternalItemId:(NSString * _Nonnull)externalItemId name:(NSString * _Nonnull)name category:(NSString * _Nonnull)category quantity:(double)quantity cost:(float)cost url:(NSString * _Nonnull)url imageUrl:(NSString * _Nullable)imageUrl description:(NSString * _Nullable)description OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, EcommerceOrderStatus, open) {
  EcommerceOrderStatusINITIALIZED = 0,
  EcommerceOrderStatusIN_PROGRESS = 1,
  EcommerceOrderStatusDELIVERED = 2,
  EcommerceOrderStatusCANCELLED = 3,
};


SWIFT_CLASS("_TtC9RetenoSDK16EcommerceProduct")
@interface EcommerceProduct : NSObject
- (nonnull instancetype)initWithProductId:(NSString * _Nonnull)productId price:(float)price isInStock:(BOOL)isInStock attributes:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nullable)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK24EcommerceProductCategory")
@interface EcommerceProductCategory : NSObject
- (nonnull instancetype)initWithProductCategoryId:(NSString * _Nonnull)productCategoryId attributes:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nullable)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK22EcommerceProductInCart")
@interface EcommerceProductInCart : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface EcommerceProductInCart (SWIFT_EXTENSION(RetenoSDK))
- (nonnull instancetype)initWithProductId:(NSString * _Nonnull)productId price:(float)price quantity:(NSInteger)quantity discount:(NSNumber * _Nullable)discount name:(NSString * _Nullable)name category:(NSString * _Nullable)category attributes:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nullable)attributes;
@end


SWIFT_CLASS("_TtC9RetenoSDK5Event")
@interface Event : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9RetenoSDK13EventObjcType")
@interface EventObjcType : NSObject
+ (EventObjcType * _Nonnull)productViewedWithProduct:(EcommerceProduct * _Nonnull)product currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)productCategoryViewedWithCategory:(EcommerceProductCategory * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)productAddedToWishlistWithProduct:(EcommerceProduct * _Nonnull)product currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)cartUpdatedWithCartId:(NSString * _Nonnull)cartId products:(NSArray<EcommerceProductInCart *> * _Nonnull)products currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderCreatedWithOrder:(EcommerceOrder * _Nonnull)order currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderUpdatedWithOrder:(EcommerceOrder * _Nonnull)order currencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderDeliveredWithExternalOrderId:(NSString * _Nonnull)externalOrderId SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)orderCancelledWithExternalOrderId:(NSString * _Nonnull)externalOrderId SWIFT_WARN_UNUSED_RESULT;
+ (EventObjcType * _Nonnull)searchRequestWithQuery:(NSString * _Nonnull)query isFound:(BoolObjc * _Nullable)isFound SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK14EventParameter")
@interface EventParameter : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK18InAppMessageAction")
@interface InAppMessageAction : NSObject
@property (nonatomic, readonly) BOOL isCloseButtonClicked;
@property (nonatomic, readonly) BOOL isButtonClicked;
@property (nonatomic, readonly) BOOL isOpenUrlClicked;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, InAppMessageStatusEnum, open) {
  InAppMessageStatusEnumInAppShouldBeDisplayed = 0,
  InAppMessageStatusEnumInAppIsDisplayed = 1,
  InAppMessageStatusEnumInAppShouldBeClosed = 2,
  InAppMessageStatusEnumInAppIsClosed = 3,
  InAppMessageStatusEnumInAppReceivedError = 4,
};


SWIFT_CLASS("_TtC9RetenoSDK22InAppMessageStatusObjc")
@interface InAppMessageStatusObjc : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, InteractionStatus, open) {
  InteractionStatusDelivered = 0,
  InteractionStatusOpened = 1,
  InteractionStatusClicked = 2,
  InteractionStatusUnknown = 3,
};


SWIFT_CLASS("_TtC9RetenoSDK19JSONConverterHelper")
@interface JSONConverterHelper : NSObject
+ (NSString * _Nullable)convertJSONToString:(id _Nonnull)json SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LinkSource : NSInteger;

SWIFT_CLASS("_TtC9RetenoSDK11LinkHandler")
@interface LinkHandler : NSObject
@property (nonatomic, readonly, copy) NSURL * _Nullable url;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable customData;
@property (nonatomic, readonly) enum LinkSource source;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LinkSource, open) {
  LinkSourcePushNotification = 0,
  LinkSourceInAppMessage = 1,
};






typedef SWIFT_ENUM(NSInteger, PauseBehaviour, open) {
/// Skipped all InAppMessages until pause enabled.
  PauseBehaviourSkipInApps = 0,
/// Skipped all InAppMessages until pause is enabled and show the first one (if it existed) when pause is disabled.
  PauseBehaviourPostponeInApps = 1,
};


SWIFT_CLASS("_TtC9RetenoSDK10RecomEvent")
@interface RecomEvent : NSObject
- (nonnull instancetype)initWithDate:(NSDate * _Nonnull)date productId:(NSString * _Nonnull)productId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK11RecomFilter")
@interface RecomFilter : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name values:(NSArray<NSString *> * _Nonnull)values OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK15Recommendations")
@interface Recommendations : NSObject
/// Log recommendation event
/// \param recomVariantId recommendation identificator
///
/// \param impressions events describing that a specific product recommendation was shown to a user
///
/// \param clicks events describing that a user clicked a specific product recommendation
///
/// \param forcePush indicates if event should be send immediately or in the next scheduled batch.
///
- (void)logEventWithRecomVariantId:(NSString * _Nonnull)recomVariantId impressions:(NSArray<RecomEvent *> * _Nonnull)impressions clicks:(NSArray<RecomEvent *> * _Nonnull)clicks forcePush:(BOOL)forcePush;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface Recommendations (SWIFT_EXTENSION(RetenoSDK))
/// Get product recommendations
/// \param recomVariantId recommendations variant identificator
///
/// \param productIds product IDs for product-based algorithms
///
/// \param categoryId product category ID for category-based algorithms
///
/// \param filters additional algorithm filters array
///
/// \param fields response model fields keys
///
/// \param success closure response dictionary `[String:  Any]
///
/// \param failure closure return error
///
- (void)getRecomsWithRecomVariantId:(NSString * _Nonnull)recomVariantId productIds:(NSArray<NSString *> * _Nonnull)productIds categoryId:(NSString * _Nullable)categoryId filters:(NSArray<RecomFilter *> * _Nullable)filters fields:(NSArray<NSString *> * _Nullable)fields success:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

@class UserNotificationService;
@class RetenoConfiguration;
@class UserAttributes;

SWIFT_CLASS("_TtC9RetenoSDK6Reteno")
@interface Reteno : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UserNotificationService * _Nonnull userNotificationService SWIFT_AVAILABILITY(ios_app_extension,unavailable);)
+ (UserNotificationService * _Nonnull)userNotificationService SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// SDK initialization
/// \param apiKey API key is used for authentication. You can create a key for a mobile application in the <code>Settings → Mobile Push</code> section in the <code>Reteno</code> cabinet.
///
/// \param configs Flag that indicates if automatic screen view tracking enabled
///
+ (void)startWithApiKey:(NSString * _Nonnull)apiKey configuration:(RetenoConfiguration * _Nonnull)configuration SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// SDK delayed initialization
+ (void)delayedStart SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// SDK delayed  initialization (can be called only after Reteno.delayedStart(configuration:))
/// \param apiKey API key is used for authentication. You can create a key for a mobile application in the <code>Settings → Mobile Push</code> section in the <code>Reteno</code> cabinet.
///
+ (void)delayedSetupWithApiKey:(NSString * _Nonnull)apiKey configuration:(RetenoConfiguration * _Nonnull)configuration SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// SDK initialization
/// \param apiKey API key is used for authentication. You can create a key for a mobile application in the <code>Settings → Mobile Push</code> section in the <code>Reteno</code> cabinet.
///
/// \param isAutomaticScreenReportingEnabled Flag that indicates if automatic screen view tracking enabled
///
/// \param isDebugMode Flag that indicates if <code>DebugMode</code> is enabled
///
/// \param isPausedInAppMessages Flag that indicates pause in InAppMessage presenting
///
+ (void)startWithApiKey:(NSString * _Nonnull)apiKey isAutomaticScreenReportingEnabled:(BOOL)isAutomaticScreenReportingEnabled isDebugMode:(BOOL)isDebugMode isPausedInAppMessages:(BOOL)isPausedInAppMessages inAppMessagesPauseBehaviour:(enum PauseBehaviour)inAppMessagesPauseBehaviour SWIFT_AVAILABILITY(ios_app_extension,unavailable);
/// Log events
/// \param eventTypeKey Event type ID
///
/// \param date Time when event occurred
///
/// \param parameters List of event parameters as array of “key” - “value” pairs. Parameter keys are arbitrary. Used in campaigns and for dynamic content creation in messages.
///
/// \param forcePush indicates if event should be send immediately or in the next scheduled batch
///
+ (void)logEventWithEventTypeKey:(NSString * _Nonnull)eventTypeKey date:(NSDate * _Nonnull)date parameters:(NSArray<EventParameter *> * _Nonnull)parameters forcePush:(BOOL)forcePush;
+ (void)addLinkHandler:(void (^ _Nonnull)(LinkHandler * _Nonnull))handler;
+ (void)addInAppStatusHandler:(void (^ _Nonnull)(InAppMessageStatusObjc * _Nonnull))handler;
/// Update push notification status in <code>Reteno</code>
/// \param interactionId <code>InteractionId</code> from push payload
///
/// \param status Interaction status. Possible values <code>.delivered</code>, <code>.opened</code>, <code>.clicked</code>
///
/// \param date Time when event occurred
///
+ (void)updateNotificationInteractionStatusWithInteractionId:(NSString * _Nonnull)interactionId status:(enum InteractionStatus)status date:(NSDate * _Nonnull)date;
/// Update User attributes
/// \param externalUserId Id for identify user in a system (optional)
///
/// \param userAttributes user specific attributes in format <code>UserAttributes</code> (firstName, phone, email, etc.) (optional)
///
/// \param subscriptionKeys list of subscription categories keys, can be empty
///
/// \param groupNamesInclude list of group ID to add a contact to, can be empty
///
/// \param groupNamesExclude list of group ID to remove a contact from, can be empty
///
+ (void)updateUserAttributesWithExternalUserId:(NSString * _Nullable)externalUserId userAttributes:(UserAttributes * _Nullable)userAttributes subscriptionKeys:(NSArray<NSString *> * _Nonnull)subscriptionKeys groupNamesInclude:(NSArray<NSString *> * _Nonnull)groupNamesInclude groupNamesExclude:(NSArray<NSString *> * _Nonnull)groupNamesExclude;
/// Update Anonymous User attributes
/// \param userAttributes user specific attributes in format <code>AnonymousUserAttributes</code> (firstName, address, etc.)
///
/// \param subscriptionKeys list of subscription categories keys, can be empty
///
/// \param groupNamesInclude list of group ID to add a contact to, can be empty
///
/// \param groupNamesExclude list of group ID to remove a contact from, can be empty
///
+ (void)updateAnonymousUserAttributesWithUserAttributes:(AnonymousUserAttributes * _Nonnull)userAttributes subscriptionKeys:(NSArray<NSString *> * _Nonnull)subscriptionKeys groupNamesInclude:(NSArray<NSString *> * _Nonnull)groupNamesInclude groupNamesExclude:(NSArray<NSString *> * _Nonnull)groupNamesExclude;
/// Get instance of <code>AppInbox</code>
+ (AppInbox * _Nonnull)inbox SWIFT_WARN_UNUSED_RESULT;
/// Get instance of <code>Recommendations</code>
+ (Recommendations * _Nonnull)recommendations SWIFT_WARN_UNUSED_RESULT;
+ (Ecommerce * _Nonnull)ecommerce SWIFT_WARN_UNUSED_RESULT;
+ (void)pauseInAppMessagesWithIsPaused:(BOOL)isPaused SWIFT_AVAILABILITY(ios_app_extension,unavailable);
+ (void)setInAppMessagesPauseBehaviourWithPauseBehaviour:(enum PauseBehaviour)pauseBehaviour;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC9RetenoSDK40RetenoCarouselNotificationViewController")
@interface RetenoCarouselNotificationViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UNNotification;

@interface RetenoCarouselNotificationViewController (SWIFT_EXTENSION(RetenoSDK)) <UNNotificationContentExtension>
- (void)didReceiveNotification:(UNNotification * _Nonnull)notification;
@end

@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;

@interface RetenoCarouselNotificationViewController (SWIFT_EXTENSION(RetenoSDK)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9RetenoSDK19RetenoConfiguration")
@interface RetenoConfiguration : NSObject
- (nonnull instancetype)initWithIsAutomaticScreenReportingEnabled:(BOOL)isAutomaticScreenReportingEnabled isAutomaticAppLifecycleReportingEnabled:(BOOL)isAutomaticAppLifecycleReportingEnabled isAutomaticPushSubsriptionReportingEnabled:(BOOL)isAutomaticPushSubsriptionReportingEnabled isAutomaticSessionReportingEnabled:(BOOL)isAutomaticSessionReportingEnabled isPausedInAppMessages:(BOOL)isPausedInAppMessages inAppMessagesPauseBehaviour:(enum PauseBehaviour)inAppMessagesPauseBehaviour isDebugMode:(BOOL)isDebugMode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC9RetenoSDK34RetenoNotificationServiceExtension")
@interface RetenoNotificationServiceExtension : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end







SWIFT_CLASS("_TtC9RetenoSDK14UserAttributes")
@interface UserAttributes : NSObject
- (nonnull instancetype)initWithPhone:(NSString * _Nullable)phone email:(NSString * _Nullable)email firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName languageCode:(NSString * _Nullable)languageCode timeZone:(NSString * _Nullable)timeZone address:(Address * _Nullable)address fields:(NSArray<UserCustomField *> * _Nonnull)fields OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC9RetenoSDK15UserCustomField")
@interface UserCustomField : NSObject
- (nonnull instancetype)initWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9RetenoSDK23UserNotificationService") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UserNotificationService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UNUserNotificationCenter;
@class UNNotificationResponse;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UserNotificationService (SWIFT_EXTENSION(RetenoSDK)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
